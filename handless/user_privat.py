from aiogram.filters import CommandStart, Command
from aiogram import types, Router, F
from keyboards import reply, inline



user_router = Router()



@user_router.message(CommandStart())
async def start(message: types.Message):
    await message.answer("""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø–µ–ª—å–º–µ–Ω–µ–π –∏ –≤–∞—Ä–µ–Ω–∏–∫–æ–≤! 
–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –Ω–∞—à–∏—Ö –≤–∫—É—Å–Ω—ã—Ö –∏ –≥–æ—Ä—è—á–∏—Ö –±–ª—é–¥. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –Ω–∞—á–∏–Ω–∫–∏ –¥–ª—è –ø–µ–ª—å–º–µ–Ω–µ–π,
–∞ —Ç–∞–∫–∂–µ —Ä–∞–∑–Ω—ã–µ —Å–æ—É—Å—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è.
–í–∞—à–∏ –∑–∞–∫–∞–∑—ã –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã –∫ –¥–æ—Å—Ç–∞–≤–∫–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏,
–∏ –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Å!""",
                         reply_markup=reply.start_kb)



@user_router.message(F.text.lower() == '–º–µ–Ω—éüòã')
@user_router.message(Command("menu"))
async def menu(message: types.Message):
    await message.answer("–í–æ—Ç –Ω–∞—à–µ –º–µ–Ω—é –ø–µ–ª—å–º–µ–Ω–µ–π –∏ –≤–∞—Ä–µ–Ω–Ω–∏–∫–æ–≤:", reply_markup=reply.menu_kb)



@user_router.message(F.text.lower() == '–æ –Ω–∞—Åü•µ')
@user_router.message(Command("about"))
async def about(message: types.Message):
    await message.answer("""–ú—ã - —ç—Ç–æ –Ω–µ–±–æ–ª—å—à–∞—è, –Ω–æ –æ—á–µ–Ω—å –¥—Ä—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ª—é–±–∏—Ç 
—Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ. –ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≥–æ—Ç–æ–≤—è—Ç—Å—è –∏–∑ —Ç–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö 
–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –∞ –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –∏ –º–∏–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ 
–Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –≤–∫—É—Å–æ–º –∏ –ø–æ–ª—å–∑–æ–π –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ. 
–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —É–ª—É—á—à–µ–Ω–∏—é –Ω–∞—à–∏—Ö —É—Å–ª—É–≥ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –≤–∞—à –æ—Ç–∑—ã–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã. 
–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!""", reply_markup=inline.links_kb)



@user_router.message(F.text.lower() == '–∫–æ–Ω—Ç–∞–∫—Ç—ãü§ô')
@user_router.message(Command("contacts"))
async def contacts(message: types.Message):
    await message.answer("""–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à—É —É—Å–ª—É–≥—É –ø–æ –∑–∞–∫–∞–∑—É –ø–µ–ª—å–º–µ–Ω–µ–π –∏ –≤–∞—Ä–µ–Ω–∏–∫–æ–≤! 
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å. 
–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —Å –¥–æ—Å—Ç–∞–≤—â–∏–∫–æ–º +375 55 586 67 74
–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º +375 29 953 31 19
–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–≤–æ—Ä–æ–º +375 85 965 45 83
–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–æ–º +375 48 551 29 75""")



@user_router.message(F.text.lower() == '–∞–¥—Ä–µ—Åüõñ')
@user_router.message(Command("addresses"))
async def addresses(message: types.Message):
    await message.answer("""–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à—É —É—Å–ª—É–≥—É –ø–æ –∑–∞–∫–∞–∑—É –ø–µ–ª—å–º–µ–Ω–µ–π –∏ –≤–∞—Ä–µ–Ω–∏–∫–æ–≤! 
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑ –ª–∏—á–Ω–æ –∏–ª–∏ —É–∑–Ω–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ, 
–º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:""", reply_markup=inline.addresses_kb())



@user_router.callback_query(F.data.lower().startswith('addresses'))
async def addresses_inline(callback: types.CallbackQuery):
    quopri = callback.data.split('_')[1]
    # await callback.message.delete()
    if quopri == '1':
        await callback.message.answer("https://www.google.com/maps/place/%D0%9F%D0%B5%D0%BB%D1%8C%D0%BC%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F+%231/@53.9172061,27.5230439,21z/data=!4m10!1m2!2m1!1z0L_QtdC70YzQvNC10L3QuA!3m6!1s0x46dbc5672b45639b:0xdcf97404f2ae069b!8m2!3d53.9171838!4d27.5231669!15sChDQv9C10LvRjNC80LXQvdC4WhIiENC_0LXQu9GM0LzQtdC90LiSARNkdW1wbGluZ19yZXN0YXVyYW50mgEjQ2haRFNVaE5NRzluUzBWSlEwRm5TVVF3YjJKcVNVZG5FQUXgAQA!16s%2Fg%2F11bwm46cyh?hl=ru-RU&entry=ttu")
    elif quopri == '2':
        await callback.message.answer("https://www.google.com/maps/place/%D0%92%D0%BA%D1%83%D1%81%D0%BD%D1%8B%D0%B5+%D0%BF%D0%B5%D0%BB%D1%8C%D0%BC%D0%B5%D0%BD%D0%B8/@53.9009834,27.5195671,21z/data=!4m10!1m2!2m1!1z0L_QtdC70YzQvNC10L3QuA!3m6!1s0x46dbc51c341dca79:0x4e6d36e0933594b7!8m2!3d53.9009533!4d27.5196967!15sChDQv9C10LvRjNC80LXQvdC4WhIiENC_0LXQu9GM0LzQtdC90LiSAQ1tZWFsX2RlbGl2ZXJ54AEA!16s%2Fg%2F11pvbfxbxc?hl=ru-RU&entry=ttu")
    await callback.answer()


@user_router.message(F.text.lower() == '–Ω–∞–∑–∞–¥üîô')
async def back_home(message: types.Message):
    await message.answer("–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply.start_kb)

# @user_router.message(F.text)
# @user_router.message(F.photo)
# @user_router.message(F.text.lower() == '–¥–æ—Å—Ç–∞–≤–∫–∞')
# @user_router.message(F.text.lower().contains('–¥–æ—Å—Ç–∞–≤'))
# @user_router.message(F.text.lower().startswith('–∫–∞–∫'))
# @user_router.message(F.text.lower().endswith('?'))
# @user_router.message(F.text.lower().startswith('–∫–∞–∫'), F.text.endswith('?'))
@user_router.message((F.text.lower().contains('—Å—Ç–æ–∏–º–æ—Å—Ç')) | (F.text.lower().contains('—Ü–µ–Ω')))
async def echo(message: types.Message):
    await message.answer("–°—Ä–∞–±–æ—Ç–∞–ª –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä")
    # user_text = message.text
    # await message.answer(user_text)
